x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
library(swirl)#
#
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args()
args(list.files())
args(list.files)
old.dir <- dir()
old.dir <- getwd()
dir.create(testdir)
dir.create()
?dir.create
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
args(list.files)
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path(folder1)
file.path("folder1", "folder2")
?dir.create
dir.create(filepath("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
set(wd)
setwd()
setwd(old.dir)
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length("myseq")
length(myseq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Brayden")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na("my_data")
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical("vect", "vect2")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
library(swirl)#
#
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncolumn=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight","bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
library(swirl)#
#
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all (ints > )
all(ints > )
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
boring_function <- function(x) {#
  x#
}
submit()
boring_function('My first function!')
boring_function
submit()
mean(c(,4,5,10))
my_mean(c(,4,5,10))
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun")
paste("Programming", "is", "fun!")
submit()
telegram()
submit()
mad_libs("House", "Happy", "Animal")
submit()
Hello %p% student!
'Hello' %p% 'student!'
""Hello" %p% "student!"
"Hello" %p% "student!"
submit()
"I" %p% "love" %p% "R!"
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = Speed, y = cars$dist)
plot(x = cars$Speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data.frame(mtcars)
data(mtcars)
?boxplot
boxplot()
boxplot(mpg ~cyl, data(mtcars))
boxplot(formula = mpg ~ cyl, data = data(mtcars))
boxplot(formula = mpg ~ cyl, data(mtcars))
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
source("http://jonsmitchell.com/code/plotFxn02b.R")
setwd('~/Desktop/Evolution/Tasks/Task_02')#
Data1 <- read.csv('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
Data2 <- read.csv('http://jonsmitchell.com/data/cyrus.csv', stringsAsFactors=F)#
write.csv(Data1, 'rawdata.csv', quote=F)#
head(Data1)#
GlargleBrgle <- Data1#
head(GlargleBrgle)#
Data1 <- GlargleBrgle#
length(Data1)#
nrow(Data1)#
ncol(Data1)#
colnames(Data1)#
head(Data1)#
Data1[1,]#
Data1[2,]#
Data1[1:3,]#
Data1[1:3, 4]#
Data1[1:5, 1:3]#
Data1[257, 1:3]#
Feeds <- which(Data1[,9] == 'bottle')#
berenMilk <- Data1[Feeds,]#
head(berenMilk)#
Feeds <- which(Data1[,'event'] == 'bottle')#
head(berenMilk)#
Feeds <- which(Data1$event == 'bottle')#
head(berenMilk)
dayID <- apply(Data1, 1, function(x) paste(x[1:3], collapse='-'))#
dateID <- sapply(dayID, as.Date, format = "%Y %m %d", origin = "2019 04 18")#
Data1$age <- dateID - dateID[which(Data1$event == 'birth')]#
head(Data1)#
beren2 <- Data1#
beren3 <- beren2[order(beren2$age),]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
source("http://jonsmitchell.com/code/plotFxn02b.R")
plot(beren3$age, beren3$mass)
?plot
source("http://jonsmitchell.com/code/plotFxn02b.R")
load("/Users/braydenjett/Desktop/Evolution/Tasks/Task_02/Byren&cyrus_mass.RData")
load("/Users/braydenjett/Desktop/Evolution/Tasks/Task_02/Byren&cyrus_mass.RData")
