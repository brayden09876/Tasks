load("/Users/braydenjett/Desktop/Evolution/Tasks/Project/code/Untitled.RData")
library(ggplot2)
library(tidyr)
ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("blue", "red"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("Silver Eel Change in Weight and Length by Decade")
save.image("~/Desktop/Evolution/Tasks/Project/code/Untitled.RData")
library(ggplot2)
library(tidyr)
ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("Silver Eel Change in Weight and Length by Decade")
ggplot + theme(panel.background = element_rect(fill = "lightgray"))
EelPlot <- ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("Silver Eel Change in Weight and Length by Decade")
EelPlot + theme(panel.background = element_rect(fill = "lightgray"))
EelPlot + theme(panel.background = element_rect(fill = "white"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "white"),
panel.grid.minor = element_line(color = "black"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),  # remove vertical grid lines
panel.grid.minor.x = element_blank(),  # remove vertical grid lines
panel.grid.major.y = element_line(color = "gray"),  # add y axis line and gray horizontal grid lines
panel.grid.minor.y = element_blank(),  # remove horizontal grid lines that are not at multiples of 500
panel.grid.major = element_line(color = "gray", size = 0.5))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),  # remove vertical grid lines
panel.grid.minor.x = element_blank(),  # remove vertical grid lines
panel.grid.major.y = element_line(color = "gray"),  # add y axis line and gray horizontal grid lines
panel.grid.minor.y = element_blank(),  # remove horizontal grid lines that are not at multiples of 500
panel.grid.major = element_line(color = "gray", linewidth = 0.5))
EelPlot + geom_vline(xintercept = 0, linetype = "solid", color = "gray")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5))
+ geom_vline(xintercept = 0, linetype = "solid", color = "gray")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
vline = geom_vline(xintercept = 0, color = "gray", linetype = "solid"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_line(color = "gray"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, size = 1))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 1))
install.packages("rstatix")
library(rstatix)
library(dplyr)
install.packages("tidyverse")
library(tidyverse)
weight_anova <- eel_data %>%
group_by(year) %>%
summarise(mean_weight = mean(weight)) %>%
anova_test(dv = mean_weight, wid = year)
rlang::last_error()
weight_anova
library(ggplot2)
library(tidyr)
install.packages("pgirmess")
library(pgirmess)
kruskal.test(New_Data$length ~ New_Data$decade)
kruskal.test(New_Data$weight ~ New_Data$decade)
New_Data$decade
install.packages("dunn.test")
library(dunn.test)
dunn.test(New_Data$length, New_Data$decade, method = "bonferroni")
dunn.test(New_Data$weight, New_Data$decade, method = "bonferroni")
library(ggplot2)
library(tidyr)
library(dunn.test)
setwd("~/Desktop/Evolution/Tasks/Project/data")
Data <- read.csv("ImsaOtoData_2.csv")
names(Data)
Data$length
Data$weight
New_Data <- subset(Data, select = c(year, length, weight))
New_Data$length
New_Data <- subset(New_Data, complete.cases(New_Data$year, New_Data$length, New_Data$weight))
New_Data$length
New_Data$weight
New_Data$year
New_Data$decade <- cut(New_Data$year, breaks = c(1980, 1990, 2000, 2010, 2020),
labels = c("1980s", "1990s", "2000s", "2010s"))
New_Data$decade
eel_data <- gather(New_Data, key = "Measurement_Type", value = "measurement", -year, -decade)
EelPlot <- ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("Silver Eel Change in Weight and Length by Decade")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 1))
EelPlot <- ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("European Silver Eel Change in Weight and Length by Decade")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 1))
EelPlot <- ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement", title = "Measurement Type") +
ggtitle("European Silver Eel Change in Weight and Length by Decade")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 1))
EelPlot <- ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
guides(fill = guide_legend(title = "Measurement Type")) +
ggtitle("European Silver Eel Change in Weight and Length by Decade")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 1))
kruskal.test(New_Data$length ~ New_Data$decade)
# There is a significant change in length across the decades.
kruskal.test(New_Data$weight ~ New_Data$decade)
# There is a significant change in weight across the decades.
dunn.test(New_Data$length, New_Data$decade, method = "bonferroni")
# There is a significant change in length between 1980s and 2010s, and between 1990s and 2010s.
dunn.test(New_Data$weight, New_Data$decade, method = "bonferroni")
