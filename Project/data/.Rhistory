load("/Users/braydenjett/Desktop/Evolution/Tasks/Project/code/Untitled.RData")
library(ggplot2)
library(tidyr)
ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("blue", "red"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("Silver Eel Change in Weight and Length by Decade")
save.image("~/Desktop/Evolution/Tasks/Project/code/Untitled.RData")
library(ggplot2)
library(tidyr)
ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("Silver Eel Change in Weight and Length by Decade")
ggplot + theme(panel.background = element_rect(fill = "lightgray"))
EelPlot <- ggplot(eel_data, aes(x = decade, y = measurement, fill = Measurement_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("lightblue", "lightpink"), labels = c("Length (mm)", "Weight (g)")) +
labs(x = "Decade", y = "Measurement") +
ggtitle("Silver Eel Change in Weight and Length by Decade")
EelPlot + theme(panel.background = element_rect(fill = "lightgray"))
EelPlot + theme(panel.background = element_rect(fill = "white"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "white"),
panel.grid.minor = element_line(color = "black"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),  # remove vertical grid lines
panel.grid.minor.x = element_blank(),  # remove vertical grid lines
panel.grid.major.y = element_line(color = "gray"),  # add y axis line and gray horizontal grid lines
panel.grid.minor.y = element_blank(),  # remove horizontal grid lines that are not at multiples of 500
panel.grid.major = element_line(color = "gray", size = 0.5))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),  # remove vertical grid lines
panel.grid.minor.x = element_blank(),  # remove vertical grid lines
panel.grid.major.y = element_line(color = "gray"),  # add y axis line and gray horizontal grid lines
panel.grid.minor.y = element_blank(),  # remove horizontal grid lines that are not at multiples of 500
panel.grid.major = element_line(color = "gray", linewidth = 0.5))
EelPlot + geom_vline(xintercept = 0, linetype = "solid", color = "gray")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5))
+ geom_vline(xintercept = 0, linetype = "solid", color = "gray")
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
vline = geom_vline(xintercept = 0, color = "gray", linetype = "solid"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_line(color = "gray"))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, size = 1))
EelPlot + theme(panel.background = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
panel.grid.minor.y = element_blank(),
panel.grid.major = element_line(color = "gray", linewidth = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 1))
install.packages("rstatix")
library(rstatix)
library(dplyr)
install.packages("tidyverse")
library(tidyverse)
weight_anova <- eel_data %>%
group_by(year) %>%
summarise(mean_weight = mean(weight)) %>%
anova_test(dv = mean_weight, wid = year)
rlang::last_error()
weight_anova
library(ggplot2)
library(tidyr)
install.packages("pgirmess")
library(pgirmess)
kruskal.test(New_Data$length ~ New_Data$decade)
kruskal.test(New_Data$weight ~ New_Data$decade)
New_Data$decade
install.packages("dunn.test")
library(dunn.test)
dunn.test(New_Data$length, New_Data$decade, method = "bonferroni")
dunn.test(New_Data$weight, New_Data$decade, method = "bonferroni")
library(brms)
library(ggplot2)
setwd("~/Desktop/Evolution/Tasks/Project/data")
Data <- read.csv("ImsaOtoData_2.csv")
names(Data)
Data$length
Data$weight
New_Data <- subset(Data, select = c(year, length, weight))
New_Data$length
New_Data <- subset(New_Data, complete.cases(New_Data$year, New_Data$length, New_Data$weight))
New_Data$length
New_Data$weight
New_Data$year
New_Data$year <- factor(New_Data$year, levels = c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
eel_test <- brm(bf(length ~ (1 | year), sigma ~ (1 | year)),
data = New_Data, family = gaussian())
eel_test
plot(eel_test)
weight_test <- brm(bf(weight ~ (1 | year), sigma ~ (1 | year)),
data = New_Data, family = gaussian())
weight_test
plot(weight_test)
LengthEffects <- ranef(eel_test)
WeightEffects <- ranef(weight_test)
# bayesplot & stanplot packages for pretty plots.
# you care about the random effect
plot(c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016), LengthEffects$year[,1,1], type="b")
plot(c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016), WeightEffects$year[,1,1], type="b")
library(magrittr)
library(dplyr)
library(purrr)
library(forcats)
library(tidyr)
library(modelr)
library(ggdist)
library(tidybayes)
library(ggplot2)
library(cowplot)
library(rstan)
library(brms)
library(ggrepel)
library(RColorBrewer)
library(gganimate)
library(posterior)
library(distributional)
theme_set(theme_tidybayes() + panel_border())
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
New_Data %>%
data_grid(year) %>%
add_epred_draws(weight_test, dpar = c("mu", "sigma")) %>%
sample_draws(30) %>%
ggplot(aes(y = year)) +
stat_slab(aes(xdist = dist_normal(mu, sigma)),
slab_color = "gray65", alpha = 1/10, fill = NA
) +
geom_point(aes(x = weight), shape = 21, fill = "#9ECAE1", size = 2)
New_Data %>%
data_grid(year) %>%
add_epred_draws(weight_test, dpar = c("mu", "sigma")) %>%
sample_draws(30) %>%
ggplot(aes(y = year)) +
stat_slab(aes(xdist = dist_normal(mu, sigma)),
slab_color = "gray65", alpha = 1/10, fill = NA
) +
geom_point(aes(x = year), shape = 21, fill = "#9ECAE1", size = 2)
New_Data %>%
data_grid(year) %>%
add_epred_draws(weight_test, dpar = c("mu", "sigma")) %>%
sample_draws(30) %>%
ggplot(aes(y = year)) +
stat_slab(aes(xdist = dist_normal(mu, sigma)),
slab_color = "gray65", alpha = 1/10, fill = NA
) +
geom_point(aes(x = weight_test), shape = 21, fill = "#9ECAE1", size = 2)
New_Data %>%
data_grid(year) %>%
add_epred_draws(weight_test, dpar = c("mu", "sigma")) %>%
sample_draws(30) %>%
ggplot(aes(y = year)) +
stat_slab(aes(xdist = dist_normal(mu, sigma)),
slab_color = "gray65", alpha = 1/10, fill = NA
) +
geom_point(aes(x = weight_test), data = New_Data, shape = 21, fill = "#9ECAE1", size = 2)
rlang::last_trace()
weight_test
plot(c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016), LengthEffects$year[,1,1], type="b")
plot(c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016), WeightEffects$year[,1,1], type="b")
WeightEffects
weight_test
MakeCurve <- function(x, Sig=5.46, SigSig=0.19){
Mus <- c()
Sds <- c()
for (i in 1:nrow(x$year)){
Mus[i] <- rnorm(1, x$year[i,1,1], x$year[i,2,1])
Sigs[i] <- rnorm(1, Sig, SigSig) + rnorm(1, x$year[i,1,2], x$year[i,2,2])
}
return(cbind(Mus, Sigs))
}
MakeCurve(weight_test)
MakeCurve(WeightEffects)
MakeCurve <- function(x, Sig=5.46, SigSig=0.19){
Mus <- c()
Sigs <- c()
for (i in 1:nrow(x$year)){
Mus[i] <- rnorm(1, x$year[i,1,1], x$year[i,2,1])
Sigs[i] <- rnorm(1, Sig, SigSig) + rnorm(1, x$year[i,1,2], x$year[i,2,2])
}
return(cbind(Mus, Sigs))
}
MakeCurve(WeightEffects)
plot(1, 1, type="n", xlim=range(New_Data$weight), yaxt="n")
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
par(las=1)
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
WeightEffects
Nrep <- 50
curve(dnorm(x, mean=Curves[j,1], sd=Curves[j,2]), col=rgb(0,0,0,0.1))
Curves <- MakeCurve(WeightEffects)
curve(dnorm(x, mean=Curves[j,1], sd=Curves[j,2]), col=rgb(0,0,0,0.1))
j <- 1
curve(dnorm(x, mean=Curves[j,1], sd=Curves[j,2]), col=rgb(0,0,0,0.1))
?curve
z <- curve(dnorm(x, mean=Curves[j,1], sd=Curves[j,2]), col=rgb(0,0,0,0.1), add=T)
z
z <- curve(dnorm(x, mean=Curves[j,1], sd=Curves[j,2]), col=rgb(0,0,0,0.1), add=T, plot=F)
?curve
z <- dnorm(seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101), mean=Curves[j,1], sd=Curves[j,2])
z
weight_test
weight_test
eff(weight_test)
?ranef
summary(weight_test)
z <- summary(weight_test)
z
str(z)
z$fixed
MakeCurve <- function(BR){
z <- summary(BR)
Sig <- z$fixed[2,1]
SigSig <- z$fixed[2,2]
Mu <- z$fixed[1,1]
MuSig <- z$fixed[1,2]
x <- ranef(BR)
Mus <- c()
Sigs <- c()
for (i in 1:nrow(x$year)){
Mus[i] <- rnorm(1, Mu, MuSig) + rnorm(1, x$year[i,1,1], x$year[i,2,1])
Sigs[i] <- rnorm(1, Sig, SigSig) + rnorm(1, x$year[i,1,2], x$year[i,2,2])
}
return(cbind(Mus, Sigs))
}
Curves <- MakeCurve(weight_test)
z <- dnorm(seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101), mean=Curves[j,1], sd=Curves[j,2])
z
weight_test
par(las=1)
ExF <- 1e5
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2])
lines(Range, rep(j, length(Range))+z*ExF)
}
}
par(las=1)
ExF <- 1e2
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2])
lines(Range, rep(j, length(Range))+z*ExF, col=rgb(0,0,0,0.01))
}
}
stan_plot(weight_test, pars="year")
stan_plot(as.stanfit(weight_test), pars="year")
head(New_Data)
Convert <- 1:8
names(Convert) <- c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016)
par(las=1)
ExF <- 1e2
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
points(New_Data$weight, Convert[as.character(New_Data$year)], pch=21, bg="lightblue")
fixef(weight_test)
fixef(weight_test)[1,1] + ranef(weight_test)[,1,1]
fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
points(Mu, 1:8, pch=21, bg='red', cex=1.2)
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
points(Mu, 1:8, pch=21, bg='red', cex=2)
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
points(Mu, (1:8)+0.25, pch=21, bg='red', cex=2)
ranef(weight_test)$year
Sig <- fixef(weight_test)[2,1] + ranef(weight_test)$year[,1,2]
Sig
Sig*3
Convert <- 1:8
names(Convert) <- c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016)
COL <- 'red'
Buffer <- 0.25
par(las=1)
ExF <- 1e2
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
points(New_Data$weight, Convert[as.character(New_Data$year)], pch=21, bg="lightblue")
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
points(Mu, (1:8)+Buffer, pch=21, bg=COL, cex=2)
Sig <- (fixef(weight_test)[2,1] + ranef(weight_test)$year[,1,2])*3
for (i in 1:8){
segments(Mu[i]-Sig[i], i+Buffer, Mu[i]+Sig[i], i+Buffer, col=COL, lwd=2)
}
for (i in 1:8){
segments(Mu[i]-Sig[i], i+Buffer, Mu[i]+Sig[i], i+Buffer, col=COL, lwd=2)
}
weight_test
Sig
WeightEffects
weight_test
tapply(New_Data[,3], New_Data[,1], sd)
tapply(New_Data[,3], New_Data[,1], var)
Sig^2
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
ExF <- 0.1
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
lines(Range, rep(j, length(Range))+z*ExF, col=rgb(0,0,0,0.01))
}
}
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
ExF <- 100
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
lines(Range, rep(j, length(Range))+z*ExF, col=rgb(0,0,0,0.01))
}
}
Convert <- 1:8
names(Convert) <- c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016)
COL <- 'red'
Buffer <- 0.25
par(las=1)
ExF <- 1e2
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
points(New_Data$weight, Convert[as.character(New_Data$year)], pch=21, bg="lightblue")
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
points(Mu, (1:8)+Buffer, pch=21, bg=COL, cex=2)
Sig <- (fixef(weight_test)[2,1] + ranef(weight_test)$year[,1,2])^2
Sig <- Sig*3
for (i in 1:8){
segments(Mu[i]-Sig[i], i+Buffer, Mu[i]+Sig[i], i+Buffer, col=COL, lwd=2)
}
Convert <- 1:8
names(Convert) <- c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016)
COL <- 'red'
Buffer <- 0.25
par(las=1)
ExF <- 1e2
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="", ylab="")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
points(New_Data$weight, Convert[as.character(New_Data$year)], pch=21, bg="lightblue")
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
Sig <- (fixef(weight_test)[2,1] + ranef(weight_test)$year[,1,2])^2
Sig <- Sig*3
for (i in 1:8){
segments(Mu[i]-Sig[i], i+Buffer, Mu[i]+Sig[i], i+Buffer, col=COL, lwd=2)
}
points(Mu, (1:8)+Buffer, pch=21, bg=COL, cex=2)
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
z
MakeCurve <- function(BR){
z <- summary(BR)
Sig <- z$fixed[2,1]
SigSig <- z$fixed[2,2]
Mu <- z$fixed[1,1]
MuSig <- z$fixed[1,2]
x <- ranef(BR)
Mus <- c()
Sigs <- c()
for (i in 1:nrow(x$year)){
Mus[i] <- rnorm(1, Mu, MuSig^2) + rnorm(1, x$year[i,1,1], x$year[i,2,1]^2)
Sigs[i] <- rnorm(1, Sig, SigSig^2) + rnorm(1, x$year[i,1,2], x$year[i,2,2]^2)
}
return(cbind(Mus, Sigs))
}
Curves <- MakeCurve(weight_test)
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
z
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
ExF <- 1e200
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
lines(Range, rep(j, length(Range)+z*ExF, col=rgb(0,0,0,0.01))
}
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
ExF <- 1e200
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
lines(Range, rep(j, length(Range))+z*ExF, col=rgb(0,0,0,0.01))
}
}
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="Weight (g)", ylab="Year", main ="Length of Eels by Year")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
points(New_Data$weight, Convert[as.character(New_Data$year)], pch=21, bg="lightblue")
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
Sig <- (fixef(weight_test)[2,1] + ranef(weight_test)$year[,1,2])^2
Sig <- Sig*3
for (i in 1:8){
segments(Mu[i]-Sig[i], i+Buffer, Mu[i]+Sig[i], i+Buffer, col=COL, lwd=2)
}
points(Mu, (1:8)+Buffer, pch=21, bg=COL, cex=2)
#####
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
ExF <- 1e200
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
lines(Range, rep(j, length(Range))+z*ExF, col=rgb(0,0,0,0.01))
}
}
plot(1, 1, type="n", xlim=range(New_Data$weight), ylim=c(0.5,8.5), yaxt="n", xlab="Weight (g)", ylab="Year", main ="Weight of Eels by Year")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
points(New_Data$weight, Convert[as.character(New_Data$year)], pch=21, bg="lightblue")
Mu <- fixef(weight_test)[1,1] + ranef(weight_test)$year[,1,1]
Sig <- (fixef(weight_test)[2,1] + ranef(weight_test)$year[,1,2])^2
Sig <- Sig*3
for (i in 1:8){
segments(Mu[i]-Sig[i], i+Buffer, Mu[i]+Sig[i], i+Buffer, col=COL, lwd=2)
}
points(Mu, (1:8)+Buffer, pch=21, bg=COL, cex=2)
#####
Nrep <- 100
Range <- seq(from=min(New_Data$weight), to=max(New_Data$weight), length.out=101)
ExF <- 1e200
for (i in 1:Nrep){
Curves <- MakeCurve(weight_test)
for (j in 1:8){
z <- dnorm(Range, mean=Curves[j,1], sd=Curves[j,2]^2)
lines(Range, rep(j, length(Range))+z*ExF, col=rgb(0,0,0,0.01))
}
}
MakeCurve2 <- function(BR){
z2 <- summary(BR)
Sig2 <- z2$fixed[2,1]
SigSig2 <- z2$fixed[2,2]
Mu2 <- z2$fixed[1,1]
MuSig2 <- z2$fixed[1,2]
x2 <- ranef(BR)
Mus2 <- c()
Sigs2 <- c()
for (i in 1:nrow(x$year)){
Mus2[i] <- rnorm(1, Mu2, MuSig2^2) + rnorm(1, x2$year[i,1,1], x2$year[i,2,1]^2)
Sigs2[i] <- rnorm(1, Sig2, SigSig2^2) + rnorm(1, x2$year[i,1,2], x2$year[i,2,2]^2)
}
return(cbind(Mus2, Sigs2))
}
Convert2 <- 1:8
names(Convert2) <- c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016)
COL2 <- 'red'
Buffer2 <- 0.25
par(las=1)
ExF2 <- 1e2
plot(1, 1, type="n", xlim=range(New_Data$length), ylim=c(0.5,8.5), yaxt="n", xlab="Length (mm)", ylab="Year", main ="Length of Eels by Year")
axis(2, at=1:8, label=c(1982, 1986, 1991, 1992, 2012, 2014, 2015, 2016))
points(New_Data$length, Convert[as.character(New_Data$year)], pch=21, bg="lightblue")
Mu2 <- fixef(eel_test)[1,1] + ranef(eel_test)$year[,1,1]
Sig2 <- (fixef(eel_test)[2,1] + ranef(eel_test)$year[,1,2])^2
Sig2 <- Sig2*3
for (i in 1:8){
segments(Mu2[i]-Sig2[i], i+Buffer2, Mu2[i]+Sig2[i], i+Buffer2, col=COL2, lwd=2)
}
points(Mu2, (1:8)+Buffer2, pch=21, bg=COL2, cex=2)
#####
Nrep2 <- 100
Range2 <- seq(from=min(New_Data$length), to=max(New_Data$length), length.out=101)
ExF2 <- 1e200
for (i in 1:Nrep2){
Curves2 <- MakeCurve(eel_test)
for (j in 1:8){
z2 <- dnorm(Range2, mean=Curves2[j,1], sd=Curves2[j,2]^2)
lines(Range2, rep(j, length(Range2))+z2*ExF2, col=rgb(0,0,0,0.01))
}
}
?brm
