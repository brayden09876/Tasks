learnPopGen
install.packages("learnPopGen")
coalescent.plot
coalescent.plot()
install.packages("learnPopGen")
install.packages("adegenet")
install.packages("poppr")
install.packages("dplyr")
install.packages("hierfstat")
install.packages("reshape2")
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("scales")
coalescent.plot
coalescent.plot()
?coalescent.plot
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
?coalescent.plot
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster, idvar = c("ID","Site"), timevar = "Locus", direction = "wide", sep = "")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide[ , 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53052", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno[ , !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy = 2, ind.names = ind, pop = site, sep = "")
lobster_gen <- missingno(lobster_gen, type = "geno", cutoff = 0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
x <- x + 1
for (i in dups_lobster){
if (length(dups_lobster[i]) > 1){
lob_dups[x] <- i
x <- x + 1
}
}
warnings()
save.image("~/Untitled.RData")
setwd("Desktop/Evolutions/Tasks/Final_Project")
setwd("/Desktop/Evolutions/Tasks/Final_Project")
setwd("~cd /Desktop/Evolutions/Tasks/Final_Project")
library(phytools)
traits
setwd('~/Desktop/Evolution/Tasks/Task_08')
trees <- list()
births <- numeric()
Fractions <- numeric()
?runif
for (i in 1:100) {
births[i] <- runif(1)
Fractions[i] <- runif(1)
trees[[i]] <- pbtree(births[i], births[i] * Fractions[i], n = 100)
}
net_diversification <- births - births * Fractions
log_tips <- sapply(trees, function(x) log(length(x$tip.label)))
plot(x = log_tips, y = net_diversification, xlab = "Log of Total Number of Tips", ylab = "Diversification Rate")
# It appears that the greater the log of the total number of tips, the more potential
# to have a higher diversification rate. If the log was under 3, then the highest
# diversification rate recorded was approximately 0.61. But, if it was greater than 4.5, but less than 5.5,
# the highest diversification rate recorded was approximately 0.98. More log of tips
# = more chance for in that range. The closer to 4.8 the higher the diversification rate
# recorded.
branch_avg <- numeric(length(trees))
for (i in seq_along(trees)) {
tree <- trees[[i]]
branch_avg[i] <- mean(cophenetic(tree))
}
branch_avg
branch_log <- log(branch_avg)
plot(x = births, y = branch_log, xlab = "Speciation Rate", ylab = "Average Branch Length")
# This displays a curvilinear relationship between branch length and speciation rate.
# specifically, branch length appears to decrease as speciation rate increases.
correlation <- cor(births, branch_avg)
correlation
# -0.22 which aligns with the graph
largest_tree <- which.max(sapply(trees, function(x) length(x$tip.label)))
largest_tree
Tree <- trees[[largest_tree]]
Tree
plot(Tree, show.tip.label = FALSE)
rates <- numeric()
traits <- list()
for (i in 1:100) {
rates[i] <- runif(1)
traits[[i]] <- fastBM(tree = Tree, sig2 = rates[i])
}
rates
traits
t_means <- lapply(traits, mean)
t_means
cor(t_means, rates)
trait_correlation <- cor(t_means, rates)
class(rates)
class(traits)
class(t_means)
t_means1 <- as.numeric(t_means)
trait_correlation <- cor(t_means1, rates)
trait_correlation
plot(x = t_means1, y = rates)
t_variance <- var(traits)
traits1 <- as.numeric(traits)
# It appears that rate at which new traits are formed increases and spreads out the
# greater or more negative t_mean is from 0.
t_variance <- var(traits)
# It appears that rate at which new traits are formed increases and spreads out the
# greater or more negative t_mean is from 0.
t_matrix <- do.call(rbind, traits)
t_numeric <- as.matrix(t_matrix, numeric())
t_variance <- var(t_numeric)
var_cor <- cor(t_variance, rates)
# It appears that rate at which new traits are formed increases and spreads out the
# greater or more negative t_mean is from 0.
rm(t_matrix)
# It appears that rate at which new traits are formed increases and spreads out the
# greater or more negative t_mean is from 0.
rm(t_variance)
# It appears that rate at which new traits are formed increases and spreads out the
# greater or more negative t_mean is from 0.
rm(t_numeric)
# It appears that rate at which new traits are formed increases and spreads out the
# greater or more negative t_mean is from 0.
t_var <- var(unlist(traits))
# It appears that rate at which new traits are formed increases and spreads out the
# greater or more negative t_mean is from 0.
t_var <- sapply(traits, var)
cor(t_var, rates)
plot(t_var, rates)
# Very strong correlation initially and traits variance becomes more spread out the greater the
# rate is.
f_cor <- cor(trait[[1]], trait[[2]])
# Very strong correlation initially and traits variance becomes more spread out the greater the
# rate is.
f_cor <- cor(traits[[1]], traits[[2]])
traits[[1]]
traitMat <- cbind(traits[[1]], traits[[2]])
traitMat
plot(traitMat)
install.packages("geomorph")
t_plot <- phylomorphospace(trees = list(trees[[1]], trees[[2]]),
data = list(traits[[1]], traits[[2]]),
xlim = c(-10, 10), ylim = c(-10, 10),
xlab = "Trait 1", ylab = "Trait 2",
plot = TRUE, points.cex = 0.5)
?pylomorphospace()
?pylomorphospace
?phylomorphospace
phylomorphospace(Tree, traits[[1]], traits[[2]], type = "p", cex = 0.5)
dim(traits[[1]])
class(traits[[1]])
# Get the dimensions of the traits matrix
trait_dim <- dim(do.call(rbind, traits))
# Create a matrix with the traits
trait_matrix <- matrix(unlist(traits), ncol = trait_dim[2], byrow = TRUE)
# Create the phylomorphospace plot
phylomorphospace(Tree, X = trait_matrix[, 1], Y = trait_matrix[, 2],
axes = TRUE, cex = 0.7, lwd = 2)
rm(trait_matrix)
rm(trait_dim)
library(phytools)
phylomorphospace(Tree, traitMat, xlab = "Trait 1", ylab = "Trait 2")
